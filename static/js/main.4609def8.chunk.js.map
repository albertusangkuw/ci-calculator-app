{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","component/App.js","logic/calculate.js","logic/isNumber.js","index.js"],"names":["Display","react_default","a","createElement","className","id","this","props","value","React","Component","Button","handleClick","_this","clickHandler","name","orange","wide","join","trim","idName","onClick","ButtonPanel","buttonName","Button_Button","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","parseInt","div","Error","concat","App","state","total","next","setState","obj","test","result","includes","parseFloat","calculate","Display_Display","ButtonPanel_ButtonPanel","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.4609def8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Display.css\";\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className=\"component-display\">\n        <div id=\"value-result\">{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    orange: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n    idName: PropTypes.string,\n  };\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.orange ? \"orange\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button id={this.props.idName} onClick={this.handleClick}>{this.props.name}</button>\n      </div>\n    );\n  }\n}\n","import Button from \"./Button\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ButtonPanel.css\";\n\nexport default class ButtonPanel extends React.Component {\n  static propTypes = {\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = buttonName => {\n    this.props.clickHandler(buttonName);\n  };\n\n  render() {\n    return (\n      <div className=\"component-button-panel\">\n        <div>\n          <Button idName=\"ac_btn\" name=\"AC\" clickHandler={this.handleClick} />\n          <Button idName=\"flip_btn\" name=\"+/-\" clickHandler={this.handleClick} />\n          <Button idName=\"percentage_btn\" name=\"%\" clickHandler={this.handleClick} />\n          <Button idName=\"ac_btn\" name=\"รท\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button idName=\"seven_btn\" name=\"7\" clickHandler={this.handleClick} />\n          <Button idName=\"eight_btn\" name=\"8\" clickHandler={this.handleClick} />\n          <Button idName=\"nine_btn\" name=\"9\" clickHandler={this.handleClick} />\n          <Button idName=\"multiplication_btn\" name=\"x\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button idName=\"four_btn\" name=\"4\" clickHandler={this.handleClick} />\n          <Button idName=\"five_btn\" name=\"5\" clickHandler={this.handleClick} />\n          <Button idName=\"six_btn\" name=\"6\" clickHandler={this.handleClick} />\n          <Button idName=\"minus_btn\" name=\"-\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button idName=\"one_btn\" name=\"1\" clickHandler={this.handleClick} />\n          <Button idName=\"two_btn\" name=\"2\" clickHandler={this.handleClick} />\n          <Button idName=\"three_btn\"name=\"3\" clickHandler={this.handleClick} />\n          <Button idName=\"plus_btn\" name=\"+\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button idName=\"zero_btn\" name=\"0\" clickHandler={this.handleClick} wide />\n          <Button idName=\"dot_btn\" name=\".\" clickHandler={this.handleClick} />\n          <Button idName=\"equal_btn\" name=\"=\" clickHandler={this.handleClick} orange />\n        </div>\n      </div>\n    );\n  }\n}\n","import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"รท\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"รท\") {\n    if (two === \"0\") {\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    }else if(parseInt(numberTwo) === 0){\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    } else {\n      return one.div(two).toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n  };\n\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n","import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big(\"100\"))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next)\n          .div(Big(\"100\"))\n          .toString(),\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","export default function isNumber(item) {\n  return /[0-9]+/.test(item);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}